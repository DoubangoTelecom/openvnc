/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.openvnc {

using System;
using System.Runtime.InteropServices;

public class vncServer : vncRunnable {
  private HandleRef swigCPtr;

  internal vncServer(IntPtr cPtr, bool cMemoryOwn) : base(OpenVNCWRAPPINVOKE.vncServerUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(vncServer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~vncServer() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        OpenVNCWRAPPINVOKE.delete_vncServer(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override string GetObjectId() {
    string ret = OpenVNCWRAPPINVOKE.vncServer_GetObjectId(swigCPtr);
    return ret;
  }

  public virtual bool IsValid() {
    bool ret = OpenVNCWRAPPINVOKE.vncServer_IsValid(swigCPtr);
    return ret;
  }

  public virtual vncError_t AddEncoding(vncRfbEncoding_t eEncoding, bool bBack) {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_AddEncoding__SWIG_0(swigCPtr, (int)eEncoding, bBack);
    return ret;
  }

  public virtual vncError_t AddEncoding(vncRfbEncoding_t eEncoding) {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_AddEncoding__SWIG_1(swigCPtr, (int)eEncoding);
    return ret;
  }

  public virtual vncError_t RemoveEncoding(vncRfbEncoding_t eEncoding) {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_RemoveEncoding(swigCPtr, (int)eEncoding);
    return ret;
  }

  public virtual vncError_t ClearEncoding(vncRfbEncoding_t eEncoding) {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_ClearEncoding(swigCPtr, (int)eEncoding);
    return ret;
  }

  public virtual vncError_t SetPassword(string pPassword) {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_SetPassword(swigCPtr, pPassword);
    return ret;
  }

  public virtual vncError_t Start() {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_Start(swigCPtr);
    return ret;
  }

  public virtual vncError_t Stop() {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncServer_Stop(swigCPtr);
    return ret;
  }

  public static vncServerObject New(string pLocalHost, ushort nLocalPort, vncNetworkType_t eType) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncServer_New__SWIG_0(pLocalHost, nLocalPort, (int)eType), true);
    return ret;
  }

  public static vncServerObject New(string pLocalHost, ushort nLocalPort) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncServer_New__SWIG_1(pLocalHost, nLocalPort), true);
    return ret;
  }

  public static vncServerObject New(string pLocalHost) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncServer_New__SWIG_2(pLocalHost), true);
    return ret;
  }

  public static vncServerObject New() {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncServer_New__SWIG_3(), true);
    return ret;
  }

}

}
