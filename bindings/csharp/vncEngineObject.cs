/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.openvnc {

using System;
using System.Runtime.InteropServices;

public class vncEngineObject : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal vncEngineObject(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(vncEngineObject obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~vncEngineObject() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        OpenVNCWRAPPINVOKE.delete_vncEngineObject(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public vncEngineObject(vncEngine obj) : this(OpenVNCWRAPPINVOKE.new_vncEngineObject__SWIG_0(vncEngine.getCPtr(obj)), true) {
  }

  public vncEngineObject() : this(OpenVNCWRAPPINVOKE.new_vncEngineObject__SWIG_1(), true) {
  }

  public vncEngineObject(vncEngineObject obj) : this(OpenVNCWRAPPINVOKE.new_vncEngineObject__SWIG_2(vncEngineObject.getCPtr(obj)), true) {
    if (OpenVNCWRAPPINVOKE.SWIGPendingException.Pending) throw OpenVNCWRAPPINVOKE.SWIGPendingException.Retrieve();
  }

  public vncEngineObject opEquals(vncEngine other) {
    vncEngineObject ret = new vncEngineObject(OpenVNCWRAPPINVOKE.vncEngineObject_opEquals__SWIG_0(swigCPtr, vncEngine.getCPtr(other)), false);
    return ret;
  }

  public vncEngineObject opEquals(vncEngineObject other) {
    vncEngineObject ret = new vncEngineObject(OpenVNCWRAPPINVOKE.vncEngineObject_opEquals__SWIG_1(swigCPtr, vncEngineObject.getCPtr(other)), false);
    if (OpenVNCWRAPPINVOKE.SWIGPendingException.Pending) throw OpenVNCWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opIsEquals(vncEngineObject other) {
    bool ret = OpenVNCWRAPPINVOKE.vncEngineObject_opIsEquals(swigCPtr, vncEngineObject.getCPtr(other));
    if (OpenVNCWRAPPINVOKE.SWIGPendingException.Pending) throw OpenVNCWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opNotEquals(vncEngineObject other) {
    bool ret = OpenVNCWRAPPINVOKE.vncEngineObject_opNotEquals(swigCPtr, vncEngineObject.getCPtr(other));
    if (OpenVNCWRAPPINVOKE.SWIGPendingException.Pending) throw OpenVNCWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opLessThan(vncEngineObject other) {
    bool ret = OpenVNCWRAPPINVOKE.vncEngineObject_opLessThan(swigCPtr, vncEngineObject.getCPtr(other));
    if (OpenVNCWRAPPINVOKE.SWIGPendingException.Pending) throw OpenVNCWRAPPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public vncEngine __deref__() {
    IntPtr cPtr = OpenVNCWRAPPINVOKE.vncEngineObject___deref__(swigCPtr);
    vncEngine ret = (cPtr == IntPtr.Zero) ? null : new vncEngine(cPtr, false);
    return ret;
  }

  public vncEngine __ref__() {
    IntPtr cPtr = OpenVNCWRAPPINVOKE.vncEngineObject___ref__(swigCPtr);
    vncEngine ret = (cPtr == IntPtr.Zero) ? null : new vncEngine(cPtr, false);
    return ret;
  }

  public bool opBool() {
    bool ret = OpenVNCWRAPPINVOKE.vncEngineObject_opBool(swigCPtr);
    return ret;
  }

  public string GetObjectId() {
    string ret = OpenVNCWRAPPINVOKE.vncEngineObject_GetObjectId(swigCPtr);
    return ret;
  }

  public bool IsValid() {
    bool ret = OpenVNCWRAPPINVOKE.vncEngineObject_IsValid(swigCPtr);
    return ret;
  }

  public vncError_t Initialize() {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncEngineObject_Initialize(swigCPtr);
    return ret;
  }

  public vncClientObject NewClient(string pLocalHost, ushort nLocalPort, vncNetworkType_t eType) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewClient__SWIG_0(swigCPtr, pLocalHost, nLocalPort, (int)eType), true);
    return ret;
  }

  public vncClientObject NewClient(string pLocalHost, ushort nLocalPort) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewClient__SWIG_1(swigCPtr, pLocalHost, nLocalPort), true);
    return ret;
  }

  public vncClientObject NewClient(string pLocalHost) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewClient__SWIG_2(swigCPtr, pLocalHost), true);
    return ret;
  }

  public vncClientObject NewClient() {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewClient__SWIG_3(swigCPtr), true);
    return ret;
  }

  public vncServerObject NewServer(string pLocalHost, ushort nLocalPort, vncNetworkType_t eType) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewServer__SWIG_0(swigCPtr, pLocalHost, nLocalPort, (int)eType), true);
    return ret;
  }

  public vncServerObject NewServer(string pLocalHost, ushort nLocalPort) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewServer__SWIG_1(swigCPtr, pLocalHost, nLocalPort), true);
    return ret;
  }

  public vncServerObject NewServer(string pLocalHost) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewServer__SWIG_2(swigCPtr, pLocalHost), true);
    return ret;
  }

  public vncServerObject NewServer() {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngineObject_NewServer__SWIG_3(swigCPtr), true);
    return ret;
  }

  public vncEngineObject New() {
    vncEngineObject ret = new vncEngineObject(OpenVNCWRAPPINVOKE.vncEngineObject_New(swigCPtr), true);
    return ret;
  }

}

}
