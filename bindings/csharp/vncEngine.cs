/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.openvnc {

using System;
using System.Runtime.InteropServices;

public class vncEngine : vncObject {
  private HandleRef swigCPtr;

  internal vncEngine(IntPtr cPtr, bool cMemoryOwn) : base(OpenVNCWRAPPINVOKE.vncEngineUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(vncEngine obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~vncEngine() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        OpenVNCWRAPPINVOKE.delete_vncEngine(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual string GetObjectId() {
    string ret = OpenVNCWRAPPINVOKE.vncEngine_GetObjectId(swigCPtr);
    return ret;
  }

  public virtual bool IsValid() {
    bool ret = OpenVNCWRAPPINVOKE.vncEngine_IsValid(swigCPtr);
    return ret;
  }

  public static vncError_t Initialize() {
    vncError_t ret = (vncError_t)OpenVNCWRAPPINVOKE.vncEngine_Initialize();
    return ret;
  }

  public virtual vncClientObject NewClient(string pLocalHost, ushort nLocalPort, vncNetworkType_t eType) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngine_NewClient__SWIG_0(swigCPtr, pLocalHost, nLocalPort, (int)eType), true);
    return ret;
  }

  public virtual vncClientObject NewClient(string pLocalHost, ushort nLocalPort) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngine_NewClient__SWIG_1(swigCPtr, pLocalHost, nLocalPort), true);
    return ret;
  }

  public virtual vncClientObject NewClient(string pLocalHost) {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngine_NewClient__SWIG_2(swigCPtr, pLocalHost), true);
    return ret;
  }

  public virtual vncClientObject NewClient() {
    vncClientObject ret = new vncClientObject(OpenVNCWRAPPINVOKE.vncEngine_NewClient__SWIG_3(swigCPtr), true);
    return ret;
  }

  public virtual vncServerObject NewServer(string pLocalHost, ushort nLocalPort, vncNetworkType_t eType) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngine_NewServer__SWIG_0(swigCPtr, pLocalHost, nLocalPort, (int)eType), true);
    return ret;
  }

  public virtual vncServerObject NewServer(string pLocalHost, ushort nLocalPort) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngine_NewServer__SWIG_1(swigCPtr, pLocalHost, nLocalPort), true);
    return ret;
  }

  public virtual vncServerObject NewServer(string pLocalHost) {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngine_NewServer__SWIG_2(swigCPtr, pLocalHost), true);
    return ret;
  }

  public virtual vncServerObject NewServer() {
    vncServerObject ret = new vncServerObject(OpenVNCWRAPPINVOKE.vncEngine_NewServer__SWIG_3(swigCPtr), true);
    return ret;
  }

  public static vncEngineObject New() {
    vncEngineObject ret = new vncEngineObject(OpenVNCWRAPPINVOKE.vncEngine_New(), true);
    return ret;
  }

}

}
